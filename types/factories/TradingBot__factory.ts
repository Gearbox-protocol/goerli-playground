/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TradingBot, TradingBotInterface } from "../TradingBot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_syncer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
    ],
    name: "approveToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "safeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "syncer",
    outputs: [
      {
        internalType: "contract Syncer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001301380380620013018339818101604052810190620000379190620000de565b808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505062000110565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a68262000079565b9050919050565b620000b88162000099565b8114620000c457600080fd5b50565b600081519050620000d881620000ad565b92915050565b600060208284031215620000f757620000f662000074565b5b60006200010784828501620000c7565b91505092915050565b6080516111c1620001406000396000818160d90152818161022f01528181610339015261035d01526111c16000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806303105b04146100515780631cff79cd1461006d578063a81cd3001461009d578063d1660f99146100bb575b600080fd5b61006b60048036038101906100669190610972565b6100d7565b005b61008760048036038101906100829190610af8565b61022b565b6040516100949190610bdc565b60405180910390f35b6100a5610337565b6040516100b29190610c5d565b60405180910390f35b6100d560048036038101906100d09190610cae565b61035b565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f9b00ee0336040518263ffffffff1660e01b81526004016101309190610d10565b602060405180830381865afa15801561014d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101719190610d63565b6101b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a790610ded565b60405180910390fd5b6101dc8160008473ffffffffffffffffffffffffffffffffffffffff166104649092919063ffffffff16565b610227817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff166104649092919063ffffffff16565b5050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f9b00ee0336040518263ffffffff1660e01b81526004016102869190610d10565b602060405180830381865afa1580156102a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c79190610d63565b610306576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fd90610ded565b60405180910390fd5b61032f828473ffffffffffffffffffffffffffffffffffffffff166105b390919063ffffffff16565b905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f9b00ee0336040518263ffffffff1660e01b81526004016103b49190610d10565b602060405180830381865afa1580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f59190610d63565b610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b90610ded565b60405180910390fd5b61045f82828573ffffffffffffffffffffffffffffffffffffffff166105fd9092919063ffffffff16565b505050565b60008114806104ee575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b81526004016104ab929190610e0d565b602060405180830381865afa1580156104c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ec9190610e4b565b145b61052d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052490610eea565b60405180910390fd5b6105ae8363095ea7b360e01b848460405160240161054c929190610f19565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610683565b505050565b60606105f583836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564000081525061074a565b905092915050565b61067e8363a9059cbb60e01b848460405160240161061c929190610f19565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610683565b505050565b60006106e5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661074a9092919063ffffffff16565b905060008151111561074557808060200190518101906107059190610d63565b610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b90610fb4565b60405180910390fd5b5b505050565b60606107598484600085610762565b90509392505050565b6060824710156107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079e90611046565b60405180910390fd5b6107b085610876565b6107ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e6906110b2565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610818919061110e565b60006040518083038185875af1925050503d8060008114610855576040519150601f19603f3d011682016040523d82523d6000602084013e61085a565b606091505b509150915061086a828286610899565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156108a9578290506108f9565b6000835111156108bc5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f09190611169565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061093f82610914565b9050919050565b61094f81610934565b811461095a57600080fd5b50565b60008135905061096c81610946565b92915050565b600080604083850312156109895761098861090a565b5b60006109978582860161095d565b92505060206109a88582860161095d565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a05826109bc565b810181811067ffffffffffffffff82111715610a2457610a236109cd565b5b80604052505050565b6000610a37610900565b9050610a4382826109fc565b919050565b600067ffffffffffffffff821115610a6357610a626109cd565b5b610a6c826109bc565b9050602081019050919050565b82818337600083830152505050565b6000610a9b610a9684610a48565b610a2d565b905082815260208101848484011115610ab757610ab66109b7565b5b610ac2848285610a79565b509392505050565b600082601f830112610adf57610ade6109b2565b5b8135610aef848260208601610a88565b91505092915050565b60008060408385031215610b0f57610b0e61090a565b5b6000610b1d8582860161095d565b925050602083013567ffffffffffffffff811115610b3e57610b3d61090f565b5b610b4a85828601610aca565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b8e578082015181840152602081019050610b73565b83811115610b9d576000848401525b50505050565b6000610bae82610b54565b610bb88185610b5f565b9350610bc8818560208601610b70565b610bd1816109bc565b840191505092915050565b60006020820190508181036000830152610bf68184610ba3565b905092915050565b6000819050919050565b6000610c23610c1e610c1984610914565b610bfe565b610914565b9050919050565b6000610c3582610c08565b9050919050565b6000610c4782610c2a565b9050919050565b610c5781610c3c565b82525050565b6000602082019050610c726000830184610c4e565b92915050565b6000819050919050565b610c8b81610c78565b8114610c9657600080fd5b50565b600081359050610ca881610c82565b92915050565b600080600060608486031215610cc757610cc661090a565b5b6000610cd58682870161095d565b9350506020610ce68682870161095d565b9250506040610cf786828701610c99565b9150509250925092565b610d0a81610934565b82525050565b6000602082019050610d256000830184610d01565b92915050565b60008115159050919050565b610d4081610d2b565b8114610d4b57600080fd5b50565b600081519050610d5d81610d37565b92915050565b600060208284031215610d7957610d7861090a565b5b6000610d8784828501610d4e565b91505092915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f742073796e636572000000000000000000000000600082015250565b6000610dd7601483610d90565b9150610de282610da1565b602082019050919050565b60006020820190508181036000830152610e0681610dca565b9050919050565b6000604082019050610e226000830185610d01565b610e2f6020830184610d01565b9392505050565b600081519050610e4581610c82565b92915050565b600060208284031215610e6157610e6061090a565b5b6000610e6f84828501610e36565b91505092915050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b6000610ed4603683610d90565b9150610edf82610e78565b604082019050919050565b60006020820190508181036000830152610f0381610ec7565b9050919050565b610f1381610c78565b82525050565b6000604082019050610f2e6000830185610d01565b610f3b6020830184610f0a565b9392505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610f9e602a83610d90565b9150610fa982610f42565b604082019050919050565b60006020820190508181036000830152610fcd81610f91565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611030602683610d90565b915061103b82610fd4565b604082019050919050565b6000602082019050818103600083015261105f81611023565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061109c601d83610d90565b91506110a782611066565b602082019050919050565b600060208201905081810360008301526110cb8161108f565b9050919050565b600081905092915050565b60006110e882610b54565b6110f281856110d2565b9350611102818560208601610b70565b80840191505092915050565b600061111a82846110dd565b915081905092915050565b600081519050919050565b600061113b82611125565b6111458185610d90565b9350611155818560208601610b70565b61115e816109bc565b840191505092915050565b600060208201905081810360008301526111838184611130565b90509291505056fea2646970667358221220c33e2d5b8767f806c19f2dd464bf0436a2d857086fa218e3b86fdddf0ba0171064736f6c634300080a0033";

export class TradingBot__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _syncer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TradingBot> {
    return super.deploy(_syncer, overrides || {}) as Promise<TradingBot>;
  }
  getDeployTransaction(
    _syncer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_syncer, overrides || {});
  }
  attach(address: string): TradingBot {
    return super.attach(address) as TradingBot;
  }
  connect(signer: Signer): TradingBot__factory {
    return super.connect(signer) as TradingBot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TradingBotInterface {
    return new utils.Interface(_abi) as TradingBotInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TradingBot {
    return new Contract(address, _abi, signerOrProvider) as TradingBot;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TradingBot, TradingBotInterface } from "../TradingBot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_syncer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
    ],
    name: "approveToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "safeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "syncer",
    outputs: [
      {
        internalType: "contract Syncer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001263380380620012638339818101604052810190620000379190620000de565b808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505062000110565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a68262000079565b9050919050565b620000b88162000099565b8114620000c457600080fd5b50565b600081519050620000d881620000ad565b92915050565b600060208284031215620000f757620000f662000074565b5b60006200010784828501620000c7565b91505092915050565b608051611123620001406000396000818160d9015281816103790152818161048301526104a701526111236000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806303105b04146100515780631cff79cd1461006d578063a81cd3001461009d578063d1660f99146100bb575b600080fd5b61006b6004803603810190610066919061096d565b6100d7565b005b61008760048036038101906100829190610af3565b610375565b6040516100949190610bd7565b60405180910390f35b6100a5610481565b6040516100b29190610c58565b60405180910390f35b6100d560048036038101906100d09190610ca9565b6104a5565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f9b00ee0336040518263ffffffff1660e01b81526004016101309190610d0b565b602060405180830381865afa15801561014d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101719190610d5e565b6101b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a790610de8565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b815260040161020b929190610e17565b6020604051808303816000875af192505050801561024757506040513d601f19601f820116820180604052508101906102449190610d5e565b60015b61036f578173ffffffffffffffffffffffffffffffffffffffff1663095ea7b38260006040518363ffffffff1660e01b8152600401610287929190610e7b565b6020604051808303816000875af11580156102a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ca9190610d5e565b508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610326929190610e17565b6020604051808303816000875af1158015610345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103699190610d5e565b50610371565b505b5050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f9b00ee0336040518263ffffffff1660e01b81526004016103d09190610d0b565b602060405180830381865afa1580156103ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104119190610d5e565b610450576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044790610de8565b60405180910390fd5b610479828473ffffffffffffffffffffffffffffffffffffffff166105ae90919063ffffffff16565b905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f9b00ee0336040518263ffffffff1660e01b81526004016104fe9190610d0b565b602060405180830381865afa15801561051b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053f9190610d5e565b61057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590610de8565b60405180910390fd5b6105a982828573ffffffffffffffffffffffffffffffffffffffff166105f89092919063ffffffff16565b505050565b60606105f083836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564000081525061067e565b905092915050565b6106798363a9059cbb60e01b8484604051602401610617929190610e17565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610696565b505050565b606061068d848460008561075d565b90509392505050565b60006106f8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661067e9092919063ffffffff16565b905060008151111561075857808060200190518101906107189190610d5e565b610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074e90610f16565b60405180910390fd5b5b505050565b6060824710156107a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079990610fa8565b60405180910390fd5b6107ab85610871565b6107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190611014565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516108139190611070565b60006040518083038185875af1925050503d8060008114610850576040519150601f19603f3d011682016040523d82523d6000602084013e610855565b606091505b5091509150610865828286610894565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156108a4578290506108f4565b6000835111156108b75782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108eb91906110cb565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061093a8261090f565b9050919050565b61094a8161092f565b811461095557600080fd5b50565b60008135905061096781610941565b92915050565b6000806040838503121561098457610983610905565b5b600061099285828601610958565b92505060206109a385828601610958565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a00826109b7565b810181811067ffffffffffffffff82111715610a1f57610a1e6109c8565b5b80604052505050565b6000610a326108fb565b9050610a3e82826109f7565b919050565b600067ffffffffffffffff821115610a5e57610a5d6109c8565b5b610a67826109b7565b9050602081019050919050565b82818337600083830152505050565b6000610a96610a9184610a43565b610a28565b905082815260208101848484011115610ab257610ab16109b2565b5b610abd848285610a74565b509392505050565b600082601f830112610ada57610ad96109ad565b5b8135610aea848260208601610a83565b91505092915050565b60008060408385031215610b0a57610b09610905565b5b6000610b1885828601610958565b925050602083013567ffffffffffffffff811115610b3957610b3861090a565b5b610b4585828601610ac5565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b89578082015181840152602081019050610b6e565b83811115610b98576000848401525b50505050565b6000610ba982610b4f565b610bb38185610b5a565b9350610bc3818560208601610b6b565b610bcc816109b7565b840191505092915050565b60006020820190508181036000830152610bf18184610b9e565b905092915050565b6000819050919050565b6000610c1e610c19610c148461090f565b610bf9565b61090f565b9050919050565b6000610c3082610c03565b9050919050565b6000610c4282610c25565b9050919050565b610c5281610c37565b82525050565b6000602082019050610c6d6000830184610c49565b92915050565b6000819050919050565b610c8681610c73565b8114610c9157600080fd5b50565b600081359050610ca381610c7d565b92915050565b600080600060608486031215610cc257610cc1610905565b5b6000610cd086828701610958565b9350506020610ce186828701610958565b9250506040610cf286828701610c94565b9150509250925092565b610d058161092f565b82525050565b6000602082019050610d206000830184610cfc565b92915050565b60008115159050919050565b610d3b81610d26565b8114610d4657600080fd5b50565b600081519050610d5881610d32565b92915050565b600060208284031215610d7457610d73610905565b5b6000610d8284828501610d49565b91505092915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f742073796e636572000000000000000000000000600082015250565b6000610dd2601483610d8b565b9150610ddd82610d9c565b602082019050919050565b60006020820190508181036000830152610e0181610dc5565b9050919050565b610e1181610c73565b82525050565b6000604082019050610e2c6000830185610cfc565b610e396020830184610e08565b9392505050565b6000819050919050565b6000610e65610e60610e5b84610e40565b610bf9565b610c73565b9050919050565b610e7581610e4a565b82525050565b6000604082019050610e906000830185610cfc565b610e9d6020830184610e6c565b9392505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610f00602a83610d8b565b9150610f0b82610ea4565b604082019050919050565b60006020820190508181036000830152610f2f81610ef3565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000610f92602683610d8b565b9150610f9d82610f36565b604082019050919050565b60006020820190508181036000830152610fc181610f85565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610ffe601d83610d8b565b915061100982610fc8565b602082019050919050565b6000602082019050818103600083015261102d81610ff1565b9050919050565b600081905092915050565b600061104a82610b4f565b6110548185611034565b9350611064818560208601610b6b565b80840191505092915050565b600061107c828461103f565b915081905092915050565b600081519050919050565b600061109d82611087565b6110a78185610d8b565b93506110b7818560208601610b6b565b6110c0816109b7565b840191505092915050565b600060208201905081810360008301526110e58184611092565b90509291505056fea2646970667358221220d00c99f70b3dfb81cc3ffa4b27960e0f7220fb4326890ddec24d8ff10f01f1b164736f6c634300080a0033";

export class TradingBot__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _syncer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TradingBot> {
    return super.deploy(_syncer, overrides || {}) as Promise<TradingBot>;
  }
  getDeployTransaction(
    _syncer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_syncer, overrides || {});
  }
  attach(address: string): TradingBot {
    return super.attach(address) as TradingBot;
  }
  connect(signer: Signer): TradingBot__factory {
    return super.connect(signer) as TradingBot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TradingBotInterface {
    return new utils.Interface(_abi) as TradingBotInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TradingBot {
    return new Contract(address, _abi, signerOrProvider) as TradingBot;
  }
}

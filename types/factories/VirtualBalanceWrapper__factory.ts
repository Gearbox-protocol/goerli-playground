/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VirtualBalanceWrapper,
  VirtualBalanceWrapperInterface,
} from "../VirtualBalanceWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposits",
    outputs: [
      {
        internalType: "contract IDeposit",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610408806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806318160ddd14610046578063323a5e0b1461006457806370a0823114610082575b600080fd5b61004e6100b2565b60405161005b919061022a565b60405180910390f35b61006c610149565b60405161007991906102c4565b60405180910390f35b61009c60048036038101906100979190610322565b61016d565b6040516100a9919061022a565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610120573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610144919061037b565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016101c991906103b7565b602060405180830381865afa1580156101e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020a919061037b565b9050919050565b6000819050919050565b61022481610211565b82525050565b600060208201905061023f600083018461021b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061028a61028561028084610245565b610265565b610245565b9050919050565b600061029c8261026f565b9050919050565b60006102ae82610291565b9050919050565b6102be816102a3565b82525050565b60006020820190506102d960008301846102b5565b92915050565b600080fd5b60006102ef82610245565b9050919050565b6102ff816102e4565b811461030a57600080fd5b50565b60008135905061031c816102f6565b92915050565b600060208284031215610338576103376102df565b5b60006103468482850161030d565b91505092915050565b61035881610211565b811461036357600080fd5b50565b6000815190506103758161034f565b92915050565b600060208284031215610391576103906102df565b5b600061039f84828501610366565b91505092915050565b6103b1816102e4565b82525050565b60006020820190506103cc60008301846103a8565b9291505056fea26469706673582212209da9eda11f30c89f4f640d88fe10a032ede816e3dcb75a9a2202cb8040b92ba564736f6c634300080a0033";

export class VirtualBalanceWrapper__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VirtualBalanceWrapper> {
    return super.deploy(overrides || {}) as Promise<VirtualBalanceWrapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VirtualBalanceWrapper {
    return super.attach(address) as VirtualBalanceWrapper;
  }
  connect(signer: Signer): VirtualBalanceWrapper__factory {
    return super.connect(signer) as VirtualBalanceWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VirtualBalanceWrapperInterface {
    return new utils.Interface(_abi) as VirtualBalanceWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VirtualBalanceWrapper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VirtualBalanceWrapper;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Syncer, SyncerInterface } from "../Syncer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "SyncerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "SyncerRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_syncer",
        type: "address",
      },
    ],
    name: "addSyncer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isSyncer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_syncer",
        type: "address",
      },
    ],
    name: "removeSyncer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261004160201b60201c565b61004960201b60201c565b61003c3361010d60201b60201c565b6102d8565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61011b61004160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1661013f61023260201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614610195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018c906102b8565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f0e1333058688a01545a33657f51ace53a4e62eb940b37ee5b7b3c2e2445c4bcd60405160405180910390a250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006102a260208361025b565b91506102ad8261026c565b602082019050919050565b600060208201905081810360008301526102d181610295565b9050919050565b610810806102e76000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634061cf5a14610067578063715018a6146100835780638da5cb5b1461008d578063ddc23917146100ab578063f2fde38b146100c7578063f9b00ee0146100e3575b600080fd5b610081600480360381019061007c919061063e565b610113565b005b61008b61022c565b005b6100956102b4565b6040516100a2919061067a565b60405180910390f35b6100c560048036038101906100c0919061063e565b6102dd565b005b6100e160048036038101906100dc919061063e565b6103f7565b005b6100fd60048036038101906100f8919061063e565b6104ef565b60405161010a91906106b0565b60405180910390f35b61011b61050f565b73ffffffffffffffffffffffffffffffffffffffff166101396102b4565b73ffffffffffffffffffffffffffffffffffffffff161461018f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018690610728565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f0e1333058688a01545a33657f51ace53a4e62eb940b37ee5b7b3c2e2445c4bcd60405160405180910390a250565b61023461050f565b73ffffffffffffffffffffffffffffffffffffffff166102526102b4565b73ffffffffffffffffffffffffffffffffffffffff16146102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029f90610728565b60405180910390fd5b6102b26000610517565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102e561050f565b73ffffffffffffffffffffffffffffffffffffffff166103036102b4565b73ffffffffffffffffffffffffffffffffffffffff1614610359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035090610728565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f49afc9b2efe43d9bde87589ef7a6e40e18db21be754f8370c59122989f429efc60405160405180910390a250565b6103ff61050f565b73ffffffffffffffffffffffffffffffffffffffff1661041d6102b4565b73ffffffffffffffffffffffffffffffffffffffff1614610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90610728565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104da906107ba565b60405180910390fd5b6104ec81610517565b50565b60016020528060005260406000206000915054906101000a900460ff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061060b826105e0565b9050919050565b61061b81610600565b811461062657600080fd5b50565b60008135905061063881610612565b92915050565b600060208284031215610654576106536105db565b5b600061066284828501610629565b91505092915050565b61067481610600565b82525050565b600060208201905061068f600083018461066b565b92915050565b60008115159050919050565b6106aa81610695565b82525050565b60006020820190506106c560008301846106a1565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006107126020836106cb565b915061071d826106dc565b602082019050919050565b6000602082019050818103600083015261074181610705565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006107a46026836106cb565b91506107af82610748565b604082019050919050565b600060208201905081810360008301526107d381610797565b905091905056fea2646970667358221220aa5d1221f7e6b43731ddb95bc55b602234e1d319146499899e22a1f146b243c064736f6c634300080a0033";

export class Syncer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Syncer> {
    return super.deploy(overrides || {}) as Promise<Syncer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Syncer {
    return super.attach(address) as Syncer;
  }
  connect(signer: Signer): Syncer__factory {
    return super.connect(signer) as Syncer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SyncerInterface {
    return new utils.Interface(_abi) as SyncerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Syncer {
    return new Contract(address, _abi, signerOrProvider) as Syncer;
  }
}

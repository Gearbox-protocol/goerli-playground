/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Syncer, SyncerInterface } from "../Syncer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_syncer",
        type: "address",
      },
    ],
    name: "addSyncer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isSyncer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_syncer",
        type: "address",
      },
    ],
    name: "removeSyncer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261008960201b60201c565b61009160201b60201c565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610155565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61078a806101646000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634061cf5a14610067578063715018a6146100835780638da5cb5b1461008d578063ddc23917146100ab578063f2fde38b146100c7578063f9b00ee0146100e3575b600080fd5b610081600480360381019061007c91906105b8565b610113565b005b61008b6101e9565b005b610095610271565b6040516100a291906105f4565b60405180910390f35b6100c560048036038101906100c091906105b8565b61029a565b005b6100e160048036038101906100dc91906105b8565b610371565b005b6100fd60048036038101906100f891906105b8565b610469565b60405161010a919061062a565b60405180910390f35b61011b610489565b73ffffffffffffffffffffffffffffffffffffffff16610139610271565b73ffffffffffffffffffffffffffffffffffffffff161461018f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610186906106a2565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6101f1610489565b73ffffffffffffffffffffffffffffffffffffffff1661020f610271565b73ffffffffffffffffffffffffffffffffffffffff1614610265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c906106a2565b60405180910390fd5b61026f6000610491565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102a2610489565b73ffffffffffffffffffffffffffffffffffffffff166102c0610271565b73ffffffffffffffffffffffffffffffffffffffff1614610316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030d906106a2565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610379610489565b73ffffffffffffffffffffffffffffffffffffffff16610397610271565b73ffffffffffffffffffffffffffffffffffffffff16146103ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e4906106a2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490610734565b60405180910390fd5b61046681610491565b50565b60016020528060005260406000206000915054906101000a900460ff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105858261055a565b9050919050565b6105958161057a565b81146105a057600080fd5b50565b6000813590506105b28161058c565b92915050565b6000602082840312156105ce576105cd610555565b5b60006105dc848285016105a3565b91505092915050565b6105ee8161057a565b82525050565b600060208201905061060960008301846105e5565b92915050565b60008115159050919050565b6106248161060f565b82525050565b600060208201905061063f600083018461061b565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061068c602083610645565b915061069782610656565b602082019050919050565b600060208201905081810360008301526106bb8161067f565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061071e602683610645565b9150610729826106c2565b604082019050919050565b6000602082019050818103600083015261074d81610711565b905091905056fea2646970667358221220183c173517e310dd1abf55b6ef120bab2d98cc7d2d7789468374f897b36296e364736f6c634300080a0033";

export class Syncer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Syncer> {
    return super.deploy(overrides || {}) as Promise<Syncer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Syncer {
    return super.attach(address) as Syncer;
  }
  connect(signer: Signer): Syncer__factory {
    return super.connect(signer) as Syncer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SyncerInterface {
    return new utils.Interface(_abi) as SyncerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Syncer {
    return new Contract(address, _abi, signerOrProvider) as Syncer;
  }
}

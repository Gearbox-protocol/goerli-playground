/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CVXKovan, CVXKovanInterface } from "../CVXKovan";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintExact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reductionPerCliff",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator_",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCliffs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526a52b7d2dcc80cd2e40000006007556103e86008553480156200002657600080fd5b506040518060400160405280600c81526020017f436f6e76657820546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600381526020017f43565800000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000ab92919062000206565b508060049080519060200190620000c492919062000206565b505050620000e7620000db6200012060201b60201c565b6200012860201b60201c565b601260ff1660808160ff168152505062000114600854600754620001ee60201b62000cf31790919060201c565b6009819055506200038c565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183620001fe9190620002ef565b905092915050565b828054620002149062000356565b90600052602060002090601f01602090048101928262000238576000855562000284565b82601f106200025357805160ff191683800117855562000284565b8280016001018555821562000284579182015b828111156200028357825182559160200191906001019062000266565b5b50905062000293919062000297565b5090565b5b80821115620002b257600081600090555060010162000298565b5090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620002fc82620002b6565b91506200030983620002b6565b9250826200031c576200031b620002c0565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200036f57607f821691505b6020821081141562000386576200038562000327565b5b50919050565b608051611f3f620003af60003960008181610535015261055b0152611f3f6000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063715018a6116100b8578063aa74e6221161007c578063aa74e6221461037d578063b3ab15fb1461039b578063ce1e79de146103b7578063d5abeb01146103d3578063dd62ed3e146103f1578063f2fde38b1461042157610142565b8063715018a6146102d75780638da5cb5b146102e157806395d89b41146102ff578063a457c2d71461031d578063a9059cbb1461034d57610142565b8063313ce5671161010a578063313ce5671461020157806332424aa31461021f578063395093511461023d57806340c10f191461026d578063570ca7351461028957806370a08231146102a757610142565b806306fdde0314610147578063095ea7b31461016557806318160ddd146101955780631f96e76f146101b357806323b872dd146101d1575b600080fd5b61014f61043d565b60405161015c91906114de565b60405180910390f35b61017f600480360381019061017a9190611599565b6104cf565b60405161018c91906115f4565b60405180910390f35b61019d6104f2565b6040516101aa919061161e565b60405180910390f35b6101bb6104fc565b6040516101c8919061161e565b60405180910390f35b6101eb60048036038101906101e69190611639565b610502565b6040516101f891906115f4565b60405180910390f35b610209610531565b60405161021691906116a8565b60405180910390f35b610227610559565b60405161023491906116a8565b60405180910390f35b61025760048036038101906102529190611599565b61057d565b60405161026491906115f4565b60405180910390f35b61028760048036038101906102829190611599565b610627565b005b610291610760565b60405161029e91906116d2565b60405180910390f35b6102c160048036038101906102bc91906116ed565b610786565b6040516102ce919061161e565b60405180910390f35b6102df6107ce565b005b6102e9610856565b6040516102f691906116d2565b60405180910390f35b610307610880565b60405161031491906114de565b60405180910390f35b61033760048036038101906103329190611599565b610912565b60405161034491906115f4565b60405180910390f35b61036760048036038101906103629190611599565b6109fc565b60405161037491906115f4565b60405180910390f35b610385610a1f565b604051610392919061161e565b60405180910390f35b6103b560048036038101906103b091906116ed565b610a25565b005b6103d160048036038101906103cc919061171a565b610ae5565b005b6103db610b6e565b6040516103e8919061161e565b60405180910390f35b61040b60048036038101906104069190611747565b610b74565b604051610418919061161e565b60405180910390f35b61043b600480360381019061043691906116ed565b610bfb565b005b60606003805461044c906117b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610478906117b6565b80156104c55780601f1061049a576101008083540402835291602001916104c5565b820191906000526020600020905b8154815290600101906020018083116104a857829003601f168201915b5050505050905090565b6000806104da610d09565b90506104e7818585610d11565b600191505092915050565b6000600254905090565b60085481565b60008061050d610d09565b905061051a858285610edc565b610525858585610f68565b60019150509392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610588610d09565b905061061c818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106179190611817565b610d11565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae906118b9565b60405180910390fd5b60006106c16104f2565b905060006106da60095483610cf390919063ffffffff16565b905060085481101561075a5760006106fd826008546111e990919063ffffffff16565b905061072660085461071883876111ff90919063ffffffff16565b610cf390919063ffffffff16565b9350600061073f846007546111e990919063ffffffff16565b90508085111561074d578094505b6107578686611215565b50505b50505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107d6610d09565b73ffffffffffffffffffffffffffffffffffffffff166107f4610856565b73ffffffffffffffffffffffffffffffffffffffff161461084a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084190611925565b60405180910390fd5b6108546000611375565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461088f906117b6565b80601f01602080910402602001604051908101604052809291908181526020018280546108bb906117b6565b80156109085780601f106108dd57610100808354040283529160200191610908565b820191906000526020600020905b8154815290600101906020018083116108eb57829003601f168201915b5050505050905090565b60008061091d610d09565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156109e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109da906119b7565b60405180910390fd5b6109f08286868403610d11565b60019250505092915050565b600080610a07610d09565b9050610a14818585610f68565b600191505092915050565b60095481565b610a2d610d09565b73ffffffffffffffffffffffffffffffffffffffff16610a4b610856565b73ffffffffffffffffffffffffffffffffffffffff1614610aa1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9890611925565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610aed610d09565b73ffffffffffffffffffffffffffffffffffffffff16610b0b610856565b73ffffffffffffffffffffffffffffffffffffffff1614610b61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5890611925565b60405180910390fd5b610b6b3382611215565b50565b60075481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610c03610d09565b73ffffffffffffffffffffffffffffffffffffffff16610c21610856565b73ffffffffffffffffffffffffffffffffffffffff1614610c77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6e90611925565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ce7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cde90611a49565b60405180910390fd5b610cf081611375565b50565b60008183610d019190611a98565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7890611b3b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610df1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de890611bcd565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ecf919061161e565b60405180910390a3505050565b6000610ee88484610b74565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f625781811015610f54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4b90611c39565b60405180910390fd5b610f618484848403610d11565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610fd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcf90611ccb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611048576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103f90611d5d565b60405180910390fd5b61105383838361143b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156110d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d090611def565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461116c9190611817565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111d0919061161e565b60405180910390a36111e3848484611440565b50505050565b600081836111f79190611e0f565b905092915050565b6000818361120d9190611e43565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127c90611ee9565b60405180910390fd5b6112916000838361143b565b80600260008282546112a39190611817565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112f89190611817565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161135d919061161e565b60405180910390a361137160008383611440565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561147f578082015181840152602081019050611464565b8381111561148e576000848401525b50505050565b6000601f19601f8301169050919050565b60006114b082611445565b6114ba8185611450565b93506114ca818560208601611461565b6114d381611494565b840191505092915050565b600060208201905081810360008301526114f881846114a5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061153082611505565b9050919050565b61154081611525565b811461154b57600080fd5b50565b60008135905061155d81611537565b92915050565b6000819050919050565b61157681611563565b811461158157600080fd5b50565b6000813590506115938161156d565b92915050565b600080604083850312156115b0576115af611500565b5b60006115be8582860161154e565b92505060206115cf85828601611584565b9150509250929050565b60008115159050919050565b6115ee816115d9565b82525050565b600060208201905061160960008301846115e5565b92915050565b61161881611563565b82525050565b6000602082019050611633600083018461160f565b92915050565b60008060006060848603121561165257611651611500565b5b60006116608682870161154e565b93505060206116718682870161154e565b925050604061168286828701611584565b9150509250925092565b600060ff82169050919050565b6116a28161168c565b82525050565b60006020820190506116bd6000830184611699565b92915050565b6116cc81611525565b82525050565b60006020820190506116e760008301846116c3565b92915050565b60006020828403121561170357611702611500565b5b60006117118482850161154e565b91505092915050565b6000602082840312156117305761172f611500565b5b600061173e84828501611584565b91505092915050565b6000806040838503121561175e5761175d611500565b5b600061176c8582860161154e565b925050602061177d8582860161154e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806117ce57607f821691505b602082108114156117e2576117e1611787565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061182282611563565b915061182d83611563565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611862576118616117e8565b5b828201905092915050565b7f556e617574686f72697a656420435658206d696e740000000000000000000000600082015250565b60006118a3601583611450565b91506118ae8261186d565b602082019050919050565b600060208201905081810360008301526118d281611896565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061190f602083611450565b915061191a826118d9565b602082019050919050565b6000602082019050818103600083015261193e81611902565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006119a1602583611450565b91506119ac82611945565b604082019050919050565b600060208201905081810360008301526119d081611994565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a33602683611450565b9150611a3e826119d7565b604082019050919050565b60006020820190508181036000830152611a6281611a26565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611aa382611563565b9150611aae83611563565b925082611abe57611abd611a69565b5b828204905092915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611b25602483611450565b9150611b3082611ac9565b604082019050919050565b60006020820190508181036000830152611b5481611b18565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611bb7602283611450565b9150611bc282611b5b565b604082019050919050565b60006020820190508181036000830152611be681611baa565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611c23601d83611450565b9150611c2e82611bed565b602082019050919050565b60006020820190508181036000830152611c5281611c16565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611cb5602583611450565b9150611cc082611c59565b604082019050919050565b60006020820190508181036000830152611ce481611ca8565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611d47602383611450565b9150611d5282611ceb565b604082019050919050565b60006020820190508181036000830152611d7681611d3a565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611dd9602683611450565b9150611de482611d7d565b604082019050919050565b60006020820190508181036000830152611e0881611dcc565b9050919050565b6000611e1a82611563565b9150611e2583611563565b925082821015611e3857611e376117e8565b5b828203905092915050565b6000611e4e82611563565b9150611e5983611563565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e9257611e916117e8565b5b828202905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611ed3601f83611450565b9150611ede82611e9d565b602082019050919050565b60006020820190508181036000830152611f0281611ec6565b905091905056fea2646970667358221220989dff0d083a10a9a46615e0f5c69268f14006d0bf860ba7224c2ed492e01d0764736f6c634300080a0033";

export class CVXKovan__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CVXKovan> {
    return super.deploy(overrides || {}) as Promise<CVXKovan>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CVXKovan {
    return super.attach(address) as CVXKovan;
  }
  connect(signer: Signer): CVXKovan__factory {
    return super.connect(signer) as CVXKovan__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CVXKovanInterface {
    return new utils.Interface(_abi) as CVXKovanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CVXKovan {
    return new Contract(address, _abi, signerOrProvider) as CVXKovan;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChainlinkPriceFeed,
  ChainlinkPriceFeedInterface,
} from "../ChainlinkPriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_syncer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "current",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
    ],
    name: "AnswerUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "phaseAggregator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "phaseId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "syncer",
    outputs: [
      {
        internalType: "contract Syncer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "updateParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516109a63803806109a683398181016040528101906100329190610117565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060ff1660a08160ff16815250505050610157565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ab82610080565b9050919050565b6100bb816100a0565b81146100c657600080fd5b50565b6000815190506100d8816100b2565b92915050565b600060ff82169050919050565b6100f4816100de565b81146100ff57600080fd5b50565b600081519050610111816100eb565b92915050565b6000806040838503121561012e5761012d61007b565b5b600061013c858286016100c9565b925050602061014d85828601610102565b9150509250929050565b60805160a05161082a61017c600039600061028a0152600061034e015261082a6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637284e416116100665780637284e4161461010e5780639a6fc8f51461012c578063a81cd30014610160578063d6bcd7451461017e578063feaf968c146101ae57610093565b80631dd9e36414610098578063313ce567146100b457806354fd4d50146100d257806358303b10146100f0575b600080fd5b6100b260048036038101906100ad9190610480565b6101d0565b005b6100bc610288565b6040516100c991906104ef565b60405180910390f35b6100da6102ac565b6040516100e79190610519565b60405180910390f35b6100f86102b5565b6040516101059190610551565b60405180910390f35b6101166102ba565b6040516101239190610605565b60405180910390f35b61014660048036038101906101419190610627565b6102f7565b604051610157959493929190610672565b60405180910390f35b61016861034c565b6040516101759190610744565b60405180910390f35b6101986004803603810190610193919061078b565b610370565b6040516101a591906107d9565b60405180910390f35b6101b661037a565b6040516101c7959493929190610672565b60405180910390f35b826000806101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff16021790555081600181905550806002819055508060038190555082600460006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff1602179055508269ffffffffffffffffffff16827f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f8360405161027b9190610519565b60405180910390a3505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006001905090565b600181565b60606040518060400160405280600c81526020017f7072696365206f7261636c650000000000000000000000000000000000000000815250905090565b60008060008060008060009054906101000a900469ffffffffffffffffffff169450600154935060025492506003549150600460009054906101000a900469ffffffffffffffffffff16905091939590929450565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000309050919050565b60008060008060008060009054906101000a900469ffffffffffffffffffff169450600154935060025492506003549150600460009054906101000a900469ffffffffffffffffffff1690509091929394565b600080fd5b600069ffffffffffffffffffff82169050919050565b6103f1816103d2565b81146103fc57600080fd5b50565b60008135905061040e816103e8565b92915050565b6000819050919050565b61042781610414565b811461043257600080fd5b50565b6000813590506104448161041e565b92915050565b6000819050919050565b61045d8161044a565b811461046857600080fd5b50565b60008135905061047a81610454565b92915050565b600080600060608486031215610499576104986103cd565b5b60006104a7868287016103ff565b93505060206104b886828701610435565b92505060406104c98682870161046b565b9150509250925092565b600060ff82169050919050565b6104e9816104d3565b82525050565b600060208201905061050460008301846104e0565b92915050565b6105138161044a565b82525050565b600060208201905061052e600083018461050a565b92915050565b600061ffff82169050919050565b61054b81610534565b82525050565b60006020820190506105666000830184610542565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105a657808201518184015260208101905061058b565b838111156105b5576000848401525b50505050565b6000601f19601f8301169050919050565b60006105d78261056c565b6105e18185610577565b93506105f1818560208601610588565b6105fa816105bb565b840191505092915050565b6000602082019050818103600083015261061f81846105cc565b905092915050565b60006020828403121561063d5761063c6103cd565b5b600061064b848285016103ff565b91505092915050565b61065d816103d2565b82525050565b61066c81610414565b82525050565b600060a0820190506106876000830188610654565b6106946020830187610663565b6106a1604083018661050a565b6106ae606083018561050a565b6106bb6080830184610654565b9695505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061070a610705610700846106c5565b6106e5565b6106c5565b9050919050565b600061071c826106ef565b9050919050565b600061072e82610711565b9050919050565b61073e81610723565b82525050565b60006020820190506107596000830184610735565b92915050565b61076881610534565b811461077357600080fd5b50565b6000813590506107858161075f565b92915050565b6000602082840312156107a1576107a06103cd565b5b60006107af84828501610776565b91505092915050565b60006107c3826106c5565b9050919050565b6107d3816107b8565b82525050565b60006020820190506107ee60008301846107ca565b9291505056fea2646970667358221220c5f605b7bc19bf23e4b385df1790f09641e7f3410e13fff125ea75157158003464736f6c634300080a0033";

export class ChainlinkPriceFeed__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _syncer: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainlinkPriceFeed> {
    return super.deploy(
      _syncer,
      _decimals,
      overrides || {}
    ) as Promise<ChainlinkPriceFeed>;
  }
  getDeployTransaction(
    _syncer: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_syncer, _decimals, overrides || {});
  }
  attach(address: string): ChainlinkPriceFeed {
    return super.attach(address) as ChainlinkPriceFeed;
  }
  connect(signer: Signer): ChainlinkPriceFeed__factory {
    return super.connect(signer) as ChainlinkPriceFeed__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkPriceFeedInterface {
    return new utils.Interface(_abi) as ChainlinkPriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkPriceFeed {
    return new Contract(address, _abi, signerOrProvider) as ChainlinkPriceFeed;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChainlinkPriceFeed,
  ChainlinkPriceFeedInterface,
} from "../ChainlinkPriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_syncer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "current",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
    ],
    name: "AnswerUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "phaseAggregator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "phaseId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "syncer",
    outputs: [
      {
        internalType: "contract Syncer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "updateParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610b57380380610b5783398181016040528101906100329190610117565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060ff1660a08160ff16815250505050610157565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ab82610080565b9050919050565b6100bb816100a0565b81146100c657600080fd5b50565b6000815190506100d8816100b2565b92915050565b600060ff82169050919050565b6100f4816100de565b81146100ff57600080fd5b50565b600081519050610111816100eb565b92915050565b6000806040838503121561012e5761012d61007b565b5b600061013c858286016100c9565b925050602061014d85828601610102565b9150509250929050565b60805160a0516109d461018360003960006103630152600081816101d2015261042701526109d46000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637284e416116100665780637284e4161461010e5780639a6fc8f51461012c578063a81cd30014610160578063d6bcd7451461017e578063feaf968c146101ae57610093565b80631dd9e36414610098578063313ce567146100b457806354fd4d50146100d257806358303b10146100f0575b600080fd5b6100b260048036038101906100ad9190610559565b6101d0565b005b6100bc610361565b6040516100c991906105c8565b60405180910390f35b6100da610385565b6040516100e791906105f2565b60405180910390f35b6100f861038e565b604051610105919061062a565b60405180910390f35b610116610393565b60405161012391906106de565b60405180910390f35b61014660048036038101906101419190610700565b6103d0565b60405161015795949392919061074b565b60405180910390f35b610168610425565b604051610175919061081d565b60405180910390f35b61019860048036038101906101939190610864565b610449565b6040516101a591906108b2565b60405180910390f35b6101b6610453565b6040516101c795949392919061074b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f9b00ee0336040518263ffffffff1660e01b815260040161022991906108b2565b602060405180830381865afa158015610246573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026a9190610905565b6102a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a09061097e565b60405180910390fd5b826000806101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff16021790555081600181905550806002819055508060038190555082600460006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff1602179055508269ffffffffffffffffffff16827f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f8360405161035491906105f2565b60405180910390a3505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006001905090565b600181565b60606040518060400160405280600c81526020017f7072696365206f7261636c650000000000000000000000000000000000000000815250905090565b60008060008060008060009054906101000a900469ffffffffffffffffffff169450600154935060025492506003549150600460009054906101000a900469ffffffffffffffffffff16905091939590929450565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000309050919050565b60008060008060008060009054906101000a900469ffffffffffffffffffff169450600154935060025492506003549150600460009054906101000a900469ffffffffffffffffffff1690509091929394565b600080fd5b600069ffffffffffffffffffff82169050919050565b6104ca816104ab565b81146104d557600080fd5b50565b6000813590506104e7816104c1565b92915050565b6000819050919050565b610500816104ed565b811461050b57600080fd5b50565b60008135905061051d816104f7565b92915050565b6000819050919050565b61053681610523565b811461054157600080fd5b50565b6000813590506105538161052d565b92915050565b600080600060608486031215610572576105716104a6565b5b6000610580868287016104d8565b93505060206105918682870161050e565b92505060406105a286828701610544565b9150509250925092565b600060ff82169050919050565b6105c2816105ac565b82525050565b60006020820190506105dd60008301846105b9565b92915050565b6105ec81610523565b82525050565b600060208201905061060760008301846105e3565b92915050565b600061ffff82169050919050565b6106248161060d565b82525050565b600060208201905061063f600083018461061b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561067f578082015181840152602081019050610664565b8381111561068e576000848401525b50505050565b6000601f19601f8301169050919050565b60006106b082610645565b6106ba8185610650565b93506106ca818560208601610661565b6106d381610694565b840191505092915050565b600060208201905081810360008301526106f881846106a5565b905092915050565b600060208284031215610716576107156104a6565b5b6000610724848285016104d8565b91505092915050565b610736816104ab565b82525050565b610745816104ed565b82525050565b600060a082019050610760600083018861072d565b61076d602083018761073c565b61077a60408301866105e3565b61078760608301856105e3565b610794608083018461072d565b9695505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107e36107de6107d98461079e565b6107be565b61079e565b9050919050565b60006107f5826107c8565b9050919050565b6000610807826107ea565b9050919050565b610817816107fc565b82525050565b6000602082019050610832600083018461080e565b92915050565b6108418161060d565b811461084c57600080fd5b50565b60008135905061085e81610838565b92915050565b60006020828403121561087a576108796104a6565b5b60006108888482850161084f565b91505092915050565b600061089c8261079e565b9050919050565b6108ac81610891565b82525050565b60006020820190506108c760008301846108a3565b92915050565b60008115159050919050565b6108e2816108cd565b81146108ed57600080fd5b50565b6000815190506108ff816108d9565b92915050565b60006020828403121561091b5761091a6104a6565b5b6000610929848285016108f0565b91505092915050565b7f43616c6c6572206973206e6f742073796e636572000000000000000000000000600082015250565b6000610968601483610650565b915061097382610932565b602082019050919050565b600060208201905081810360008301526109978161095b565b905091905056fea2646970667358221220269411a578a727447433486ac03d5bde77c99247d89e94c304fad6b93054b2ce64736f6c634300080a0033";

export class ChainlinkPriceFeed__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _syncer: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainlinkPriceFeed> {
    return super.deploy(
      _syncer,
      _decimals,
      overrides || {}
    ) as Promise<ChainlinkPriceFeed>;
  }
  getDeployTransaction(
    _syncer: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_syncer, _decimals, overrides || {});
  }
  attach(address: string): ChainlinkPriceFeed {
    return super.attach(address) as ChainlinkPriceFeed;
  }
  connect(signer: Signer): ChainlinkPriceFeed__factory {
    return super.connect(signer) as ChainlinkPriceFeed__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkPriceFeedInterface {
    return new utils.Interface(_abi) as ChainlinkPriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkPriceFeed {
    return new Contract(address, _abi, signerOrProvider) as ChainlinkPriceFeed;
  }
}

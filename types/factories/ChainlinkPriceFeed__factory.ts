/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChainlinkPriceFeed,
  ChainlinkPriceFeedInterface,
} from "../ChainlinkPriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_syncer",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_mainnetOracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "current",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
    ],
    name: "AnswerUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mainnetOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "phaseAggregator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "phaseId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "syncer",
    outputs: [
      {
        internalType: "contract Syncer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "updateParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162000c1238038062000c1283398181016040528101906200003791906200015e565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508160ff1660a08160ff16815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050620001ba565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060ff82169050919050565b620001388162000120565b81146200014457600080fd5b50565b60008151905062000158816200012d565b92915050565b6000806000606084860312156200017a5762000179620000b6565b5b60006200018a8682870162000109565b93505060206200019d8682870162000147565b9250506040620001b08682870162000109565b9150509250925092565b60805160a05160c051610a21620001f160003960006103fb0152600061038c0152600081816101fb01526104740152610a216000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063785c9ad411610066578063785c9ad4146101375780639a6fc8f514610155578063a81cd30014610189578063d6bcd745146101a7578063feaf968c146101d75761009e565b80631dd9e364146100a3578063313ce567146100bf57806354fd4d50146100dd57806358303b10146100fb5780637284e41614610119575b600080fd5b6100bd60048036038101906100b891906105a6565b6101f9565b005b6100c761038a565b6040516100d49190610615565b60405180910390f35b6100e56103ae565b6040516100f2919061063f565b60405180910390f35b6101036103b7565b6040516101109190610677565b60405180910390f35b6101216103bc565b60405161012e919061072b565b60405180910390f35b61013f6103f9565b60405161014c919061078e565b60405180910390f35b61016f600480360381019061016a91906107a9565b61041d565b6040516101809594939291906107f4565b60405180910390f35b610191610472565b60405161019e91906108a6565b60405180910390f35b6101c160048036038101906101bc91906108ed565b610496565b6040516101ce919061078e565b60405180910390f35b6101df6104a0565b6040516101f09594939291906107f4565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f9b00ee0336040518263ffffffff1660e01b8152600401610252919061078e565b602060405180830381865afa15801561026f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102939190610952565b6102d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c9906109cb565b60405180910390fd5b826000806101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff16021790555081600181905550806002819055508060038190555082600460006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff1602179055508269ffffffffffffffffffff16827f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f8360405161037d919061063f565b60405180910390a3505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006001905090565b600181565b60606040518060400160405280600c81526020017f7072696365206f7261636c650000000000000000000000000000000000000000815250905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060008060008060009054906101000a900469ffffffffffffffffffff169450600154935060025492506003549150600460009054906101000a900469ffffffffffffffffffff16905091939590929450565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000309050919050565b60008060008060008060009054906101000a900469ffffffffffffffffffff169450600154935060025492506003549150600460009054906101000a900469ffffffffffffffffffff1690509091929394565b600080fd5b600069ffffffffffffffffffff82169050919050565b610517816104f8565b811461052257600080fd5b50565b6000813590506105348161050e565b92915050565b6000819050919050565b61054d8161053a565b811461055857600080fd5b50565b60008135905061056a81610544565b92915050565b6000819050919050565b61058381610570565b811461058e57600080fd5b50565b6000813590506105a08161057a565b92915050565b6000806000606084860312156105bf576105be6104f3565b5b60006105cd86828701610525565b93505060206105de8682870161055b565b92505060406105ef86828701610591565b9150509250925092565b600060ff82169050919050565b61060f816105f9565b82525050565b600060208201905061062a6000830184610606565b92915050565b61063981610570565b82525050565b60006020820190506106546000830184610630565b92915050565b600061ffff82169050919050565b6106718161065a565b82525050565b600060208201905061068c6000830184610668565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106cc5780820151818401526020810190506106b1565b838111156106db576000848401525b50505050565b6000601f19601f8301169050919050565b60006106fd82610692565b610707818561069d565b93506107178185602086016106ae565b610720816106e1565b840191505092915050565b6000602082019050818103600083015261074581846106f2565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107788261074d565b9050919050565b6107888161076d565b82525050565b60006020820190506107a3600083018461077f565b92915050565b6000602082840312156107bf576107be6104f3565b5b60006107cd84828501610525565b91505092915050565b6107df816104f8565b82525050565b6107ee8161053a565b82525050565b600060a08201905061080960008301886107d6565b61081660208301876107e5565b6108236040830186610630565b6108306060830185610630565b61083d60808301846107d6565b9695505050505050565b6000819050919050565b600061086c6108676108628461074d565b610847565b61074d565b9050919050565b600061087e82610851565b9050919050565b600061089082610873565b9050919050565b6108a081610885565b82525050565b60006020820190506108bb6000830184610897565b92915050565b6108ca8161065a565b81146108d557600080fd5b50565b6000813590506108e7816108c1565b92915050565b600060208284031215610903576109026104f3565b5b6000610911848285016108d8565b91505092915050565b60008115159050919050565b61092f8161091a565b811461093a57600080fd5b50565b60008151905061094c81610926565b92915050565b600060208284031215610968576109676104f3565b5b60006109768482850161093d565b91505092915050565b7f43616c6c6572206973206e6f742073796e636572000000000000000000000000600082015250565b60006109b560148361069d565b91506109c08261097f565b602082019050919050565b600060208201905081810360008301526109e4816109a8565b905091905056fea26469706673582212200d332c47118a39c4efeca522e79fdbf3f1234d0abd302f46ab612bd16ed89cbf64736f6c634300080a0033";

export class ChainlinkPriceFeed__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _syncer: string,
    _decimals: BigNumberish,
    _mainnetOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainlinkPriceFeed> {
    return super.deploy(
      _syncer,
      _decimals,
      _mainnetOracle,
      overrides || {}
    ) as Promise<ChainlinkPriceFeed>;
  }
  getDeployTransaction(
    _syncer: string,
    _decimals: BigNumberish,
    _mainnetOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _syncer,
      _decimals,
      _mainnetOracle,
      overrides || {}
    );
  }
  attach(address: string): ChainlinkPriceFeed {
    return super.attach(address) as ChainlinkPriceFeed;
  }
  connect(signer: Signer): ChainlinkPriceFeed__factory {
    return super.connect(signer) as ChainlinkPriceFeed__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkPriceFeedInterface {
    return new utils.Interface(_abi) as ChainlinkPriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkPriceFeed {
    return new Contract(address, _abi, signerOrProvider) as ChainlinkPriceFeed;
  }
}

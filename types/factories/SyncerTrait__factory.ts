/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SyncerTrait, SyncerTraitInterface } from "../SyncerTrait";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_syncer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "syncer",
    outputs: [
      {
        internalType: "contract Syncer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610243380380610243833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b60805161012d61011660003960006049015261012d6000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063a81cd30014602d575b600080fd5b60336047565b604051603e919060de565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060aa60a660a284606b565b608b565b606b565b9050919050565b600060ba826095565b9050919050565b600060ca8260b1565b9050919050565b60d88160c1565b82525050565b600060208201905060f1600083018460d1565b9291505056fea26469706673582212209f0dc9d48275005d8ef12155a642888947dfad99566e0a82b3ec578f2271b01664736f6c634300080a0033";

export class SyncerTrait__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _syncer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SyncerTrait> {
    return super.deploy(_syncer, overrides || {}) as Promise<SyncerTrait>;
  }
  getDeployTransaction(
    _syncer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_syncer, overrides || {});
  }
  attach(address: string): SyncerTrait {
    return super.attach(address) as SyncerTrait;
  }
  connect(signer: Signer): SyncerTrait__factory {
    return super.connect(signer) as SyncerTrait__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SyncerTraitInterface {
    return new utils.Interface(_abi) as SyncerTraitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SyncerTrait {
    return new Contract(address, _abi, signerOrProvider) as SyncerTrait;
  }
}
